######################################################### \
#### User MCU and TMCs wiring definition file ###########  + --> Everything MCU related :)
######################################################### /

# This file is yours: keep in mind that it will not be erased when updating
# the config using moonraker and it will be kept as you've set it.

# Put here all your wiring definitions, your MCU serial port, CANbus UUID, etc...
# It should be populated automatically with some default wiring templates during
# the first time install of the config if you choose to do so when asked by the
# script. If it's not the case, you will need to manually define all your
# [board_pins] section. You can use the pinout documentation here: ./docs/pinout.md

# ------------------------------------------------------------------------------------------


#-------------------------#
#   TMCs DRIVERS          #
#-------------------------#

# ---------------------------------------------------------------------- AXIS DRIVERS ----> optional, but only one line per axis need to be selected
### 1. X Drivers -------------------------------------------------------------------------
[include config/hardware/axis/X/TMC/TMC2209.cfg]
# [include config/hardware/axis/X/TMC/TMC2209_V0specific.cfg] # Should only be used for early LDO V0 kits to mitigate the known VFAs issue
# [include config/hardware/axis/X/TMC/TMC2240.cfg]
# [include config/hardware/axis/X/TMC/TMC5160.cfg]
### 2. Y Drivers -------------------------------------------------------------------------
[include config/hardware/axis/Y/TMC/TMC2209.cfg]
# [include config/hardware/axis/Y/TMC/TMC2209_V0specific.cfg] # Should only be used for early LDO V0 kits to mitigate the known VFAs issue
# [include config/hardware/axis/Y/TMC/TMC2240.cfg]
# [include config/hardware/axis/Y/TMC/TMC5160.cfg]
### 3. Z Drivers -------------------------------------------------------------------------
# [include config/hardware/axis/Z/TMC/TMC2209_1-Motor.cfg]
# [include config/hardware/axis/Z/TMC/TMC2209_3-Motors.cfg]
[include config/hardware/axis/Z/TMC/TMC2209_4-Motors.cfg]
# [include config/hardware/axis/Z/TMC/TMC2240_1-Motor.cfg]
# [include config/hardware/axis/Z/TMC/TMC2240_3-Motors.cfg]
# [include config/hardware/axis/Z/TMC/TMC2240_4-Motors.cfg]
# [include config/hardware/axis/Z/TMC/TMC5160_1-Motor.cfg]
# [include config/hardware/axis/Z/TMC/TMC5160_3-Motors.cfg]
# [include config/hardware/axis/Z/TMC/TMC5160_4-Motors.cfg]
# ----------------------------------------------------------------------------------------


# ------------------------------------------------------------------- EXTRUDER DRIVER ----> optional, but only one line need to be selected
### --------------------------------------------------------------------------------------
[include config/hardware/extruder/TMC/TMC2209.cfg]
# [include config/hardware/extruder/TMC/TMC2240.cfg]
# ----------------------------------------------------------------------------------------

[include config/mcu_definitions/rpi.cfg] # Do not remove this line

#---------------------------------------------#
#### Mellow C8 MCU definition ########
#---------------------------------------------#

[mcu]
##--------------------------------------------------------------------
# This board works by using a serial connection by default. If you
# want to use CAN, invert the commented lines and use canbus_uuid.

# serial: /dev/serial/by-id/change-me-to-the-correct-mcu-path
canbus_uuid: c8aa41fe04dd
# serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_410045000D51343039363832-if00
##--------------------------------------------------------------------

[include local_config/mcu_definitions/main/Mellow_C8.cfg] # Do not remove this line
[board_pins c8_mcu]
mcu: mcu
aliases:
    X_STEP=MCU_DRIVE0_STEP  , X_DIR=MCU_DRIVE0_DIR  , X_ENABLE=MCU_DRIVE0_EN  , X_TMCUART=MCU_DRIVE0_UART  ,
    Y_STEP=MCU_DRIVE1_STEP  , Y_DIR=MCU_DRIVE1_DIR  , Y_ENABLE=MCU_DRIVE1_EN  , Y_TMCUART=MCU_DRIVE1_UART  ,

    Z_STEP=MCU_DRIVE2_STEP  , Z_DIR=MCU_DRIVE2_DIR  , Z_ENABLE=MCU_DRIVE2_EN  , Z_TMCUART=MCU_DRIVE2_UART  ,
    Z1_STEP=MCU_DRIVE3_STEP , Z1_DIR=MCU_DRIVE3_DIR , Z1_ENABLE=MCU_DRIVE3_EN , Z1_TMCUART=MCU_DRIVE3_UART ,
    Z2_STEP=MCU_DRIVE4_STEP , Z2_DIR=MCU_DRIVE4_DIR , Z2_ENABLE=MCU_DRIVE4_EN , Z2_TMCUART=MCU_DRIVE4_UART ,
    Z3_STEP=MCU_DRIVE5_STEP , Z3_DIR=MCU_DRIVE5_DIR , Z3_ENABLE=MCU_DRIVE5_EN , Z3_TMCUART=MCU_DRIVE5_UART ,

    # E_STEP=MCU_DRIVE6_STEP  , E_DIR=MCU_DRIVE6_DIR  , E_ENABLE=MCU_DRIVE6_EN  , E_TMCUART=MCU_DRIVE6_UART  ,

    # DRIVER_SPI_MOSI=MCU_SPI2_MOSI , # Used in case of SPI drivers such as TMC2240 or TMC5160
    # DRIVER_SPI_MISO=MCU_SPI2_MISO , # Used in case of SPI drivers such as TMC2240 or TMC5160
    # DRIVER_SPI_SCK=MCU_SPI2_SCK   , # Used in case of SPI drivers such as TMC2240 or TMC5160

    X_STOP=MCU_DRIVE0_STOP , Y_STOP=MCU_DRIVE1_STOP , Z_STOP=MCU_DRIVE2_STOP ,
    PROBE_INPUT=MCU_PROBE2 ,
    RUNOUT_SENSOR=MCU_FWS1 ,

    # E_HEATER=MCU_HEAT0       , E_TEMPERATURE=MCU_ADC_1   ,
    BED_HEATER=MCU_BED , BED_TEMPERATURE=MCU_ADC_0 , 

    PART_FAN=MCU_FAN2 , E_FAN=MCU_FAN3 ,
    CONTROLLER_FAN=MCU_FAN1 ,
    # EXHAUST_FAN=MCU_FAN3 ,
    FILTER_FAN=MCU_FAN2 ,
    # HOST_CONTROLLER_FAN=MCU_FAN5 ,

    CHAMBER_TEMPERATURE=MCU_TH1 ,
    ELECTRICAL_CABINET_TEMPERATURE=MCU_TH2 ,

    LIGHT_OUTPUT=MCU_HEAT2 ,
    STATUS_NEOPIXEL=MCU_RGB1 ,
    LIGHT_NEOPIXEL=MCU_RGB2 ,

    SERVO_PIN=MCU_PROBE1 ,

# [fan_generic fan_1]
# pin: mcu:MCU_FAN0
# max_power: 1.0
# [fan_generic fan_2]
# pin: mcu:MCU_FAN1
# max_power: 1.0
# [fan_generic fan_3]
# pin: mcu:MCU_FAN2
# max_power: 1.0
# [fan_generic fan_4]
# pin: mcu:MCU_FAN3
# max_power: 1.0
[temperature_sensor mcu]
max_temp = 100

[controller_fan host_stepper_fan]      # 上位机散热风扇
pin: mcu:MCU_FAN0     # 上位机风扇pin脚
max_power: 1.0
stepper: stepper_x

[temperature_fan host_mcu_fan]
pin: CONTROLLER_FAN
max_power: 1.0
sensor_type: temperature_host   # 设置为上位机主控温度
control:watermark               # 控制方式
target_temp: 48                 # 上位机散热风扇启动温度
min_temp: 0                     # 最低温度，低于此温度将会报错
max_temp: 100                    # 最高温度，高于此温度将会报错
off_below: 0.10
kick_start_time: 0.50
max_speed: 0.6                  # 最大转速，为满功率运转时的80%
min_speed: 0.3                  # 最小转速，为满功率运转时的30%

#-------------------------------------------#
#### Mellow SB2040 v3 MCU definition ########
#-------------------------------------------#

[mcu toolhead]
##--------------------------------------------------------------------
canbus_uuid: dd2a95cd5925

##--------------------------------------------------------------------

# If you want to override the wiring of the Mellow SB2040, keep in mind that this
# board is defined using the "toolhead" name. So you should use "pin: toolhead:PIN_NAME"
# in your own overrides.cfg files.


[include local_config/mcu_definitions/toolhead/Mellow_SB2040_v3.cfg] # Do not remove this line
[board_pins sb2040_mcu]
mcu: toolhead
aliases:
    E_STEP=MCU_EMOT_STEP , E_DIR=MCU_EMOT_DIR , E_ENABLE=MCU_EMOT_EN , E_TMCUART=MCU_EMOT_UART ,

    X_STOP=MCU_ENDSTOP             ,
    PROBE_INPUT=MCU_HV_ENDSTOP     ,
    TOOLHEAD_SENSOR=MCU_5V_ENDSTOP ,
    # EXTRUDER_SENSOR=MCU_FAN2       ,
    

    E_HEATER=MCU_HEAT , E_TEMPERATURE=MCU_TEMP ,

    PART_FAN=MCU_FAN0 , E_FAN=MCU_FAN1 , MCU_FAN=MCU_FAN2 ,

    STATUS_NEOPIXEL=MCU_RGB ,

    ADXL_CS=MCU_ADXL_CS , ADXL_SCLK=MCU_ADXL_SCK , ADXL_MOSI=MCU_ADXL_MOSI , ADXL_MISO=MCU_ADXL_MISO ,


#----------------------------------------#
#     Mellow SB2040 v3 pins remapping    #
#----------------------------------------#

# These pins overrides are automatically added when you select a CANbus
# toolhead MCU during the installation process. They should provide a
# good base to work with. Feel free to adapt to your board if needed!

[extruder]
step_pin: toolhead:E_STEP
dir_pin: !toolhead:E_DIR
enable_pin: !toolhead:E_ENABLE
heater_pin: toolhead:E_HEATER
sensor_pin: toolhead:E_TEMPERATURE

[tmc2209 extruder]
uart_pin: toolhead:E_TMCUART

# [probe]
# pin: ^toolhead:PROBE_INPUT

[fan]
pin: toolhead:PART_FAN

[heater_fan hotend_fan]
pin: toolhead:E_FAN

## Uncomment the following line if not using sensorless homing
## and having the X endstop plugged to the toolhead MCU
# [stepper_x]
# endstop_pin: ^toolhead:X_STOP

[neopixel status_leds]
pin: toolhead:STATUS_NEOPIXEL

[temperature_fan toolhead_mcu_fan]
pin: toolhead:MCU_FAN2
control: watermark
sensor_type: temperature_combined
sensor_list: temperature_sensor toolhead_mcu
combination_method: max                                           # use the maximum reading of the sensors
max_power: 1.0
maximum_deviation: 999.9                                          # we don't care about the difference in temperature
target_temp: 48                 # 上位机散热风扇启动温度
min_temp: 0                     # 最低温度，低于此温度将会报错
max_temp: 100                    # 最高温度，高于此温度将会报错
off_below: 0.10
kick_start_time: 0.50
max_speed: 0.8                  # 最大转速，为满功率运转时的80%
min_speed: 0.3                  # 最小转速，为满功率运转时的30%